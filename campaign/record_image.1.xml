<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="imagewindow" merge="join">		
		<script file="campaign/scripts/updated_imagewindow.lua" />			
		<sheetdata>
			<image_record name="image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/updated_image.lua" />									
			</image_record>
			<image_record name="features_image" insertbefore="scroller_image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/updated_image.lua" />
			</image_record>
			<image_record name="play_image" insertbefore="scroller_image">
				<default snap="on" drawingsize="200,200" />
				<script file="campaign/scripts/updated_image.lua" />
			</image_record>
		</sheetdata>		
	</windowclass>
	
	<windowclass name="imagepanelwindow" merge="join">
<!--		<sharable shareas="imagewindow" />
		<frame>imagepanel</frame>-->
		<script file="campaign/scripts/updated_imagewindow.lua" />				
		<sheetdata>
			<sub_record_toolbar_imagepanel name="toolbar" />
			
			<imagepanel_record name="image">
				<script file="campaign/scripts/updated_image.lua" />
			</imagepanel_record>
			<imagepanel_record name="features_image" insertbefore="scroller_image">
				<script file="campaign/scripts/updated_image.lua" />
			</imagepanel_record>
			<imagepanel_record name="play_image" insertbefore="scroller_image">
				<script file="campaign/scripts/updated_image.lua" />
			</imagepanel_record>			
<!--			<scrollercontrol name="scroller_image">
				<anchored to="image" position="insidebottomright" offset="3,3" width="40" height="38" />
				<target>image</target>
				<button normal="button_scrollerpan" pressed="button_scrollerpan_down" zoom="button_zoomer" zoompressed="button_zoomer_down" />
			</scrollercontrol>
			<imagepaneldata_record name="imagedata" source="image" />-->
		</sheetdata>
	</windowclass>	

	<windowclass name="imagewindow_toolbar" merge="join">
		<script>
			function onInit()
				update()
			end
			function getImage()
				if User.isHost() then
					local activelayer = parentcontrol.window.layerEnabled()
					if activelayer == "play_image" then
						return parentcontrol.window.play_image
					elseif activelayer == "image" then
						return parentcontrol.window.image
					elseif activelayer == "features_image" then
						return parentcontrol.window.features_image					
					end			
				else
					return parentcontrol.window.play_image
				end
			end
			function update()
				super.update()
				if User.isHost() then
					h4.setVisible(true)
					toggle_layers.setVisible(true)
					local bShowLayersToggle = false
					if toggle_layers.getValue() &gt; 0 then
						bShowLayersToggle = true
					end
					local bShowLayersToolbar = false
					bShowLayersToolbar = bShowLayersToggle
					toolbar_layers.setVisibility(bShowLayersToolbar)
					toolbar_clear_saves.setVisible(true)					
				end
			
				local activelayer = "play_image"
				local bHasTokens = false;
				
				if User.isHost() then
					bHasTokens = getImage().hasTokens();
					activelayer = parentcontrol.window.layerEnabled()
				else
					bHasTokens = parentcontrol.window.play_image.hasTokens();
				end
			
				toggle_select.setVisible(bHasTokens);
				
				if activelayer == "play_image" then
					h3.setVisible(bHasTokens);
					toggle_targetselect.setVisible(bHasTokens);
					toolbar_targeting.setVisibility(bHasTokens);
				else
					h3.setVisible(false);
					toggle_targetselect.setVisible(false);
					toolbar_targeting.setVisibility(false);
				end								
			end
		</script>
		<sheetdata>
			<toolbar_30 name="toolbar_draw" merge="join">
				<script>
					function onValueChanged()
						local activelayer = window.parentcontrol.window.layerEnabled()
						local sTool = ""
						if activelayer == "play_image" then
							sTool = window.getImage().getCursorMode()
						elseif activelayer == "image" then
							sTool = window.parentcontrol.window.image.getCursorMode()
						end
						if sTool == "unmask" and activelayer == "image" then
							setActive("unmask")
						elseif sTool == "draw" and activelayer == "play_image" then
							setActive("paint")
						elseif sTool == "erase" and activelayer == "play_image" then
							setActive("erase")
						else
							setActive("")
						end
					end
					function onButtonPress(id)
						local activelayer = window.parentcontrol.window.layerEnabled()
						local image = ""
						if activelayer == "play_image" then
							image = window.getImage()
						elseif activelayer == "image" then
							image = window.parentcontrol.window.image
						end
						if id == "paint" and activelayer == "play_image" then
							if image.getCursorMode() ~= "draw" then
								image.setCursorMode("draw")
							else
								image.setCursorMode("")
							end
						elseif id == "erase" and activelayer == "play_image" then
							if image.getCursorMode() ~= "erase" then
								image.setCursorMode("erase")
							else
								image.setCursorMode("")
							end
						elseif id == "unmask" and activelayer == "image" then
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								image.setCursorMode("")
							end
						end
						onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- New -->
			<genericcontrol name="h4" insertbefore="h2">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_layers" insertbefore="h2">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<state icon="tool_layers_30" color="60A0A0A0" />
				<state icon="tool_layers_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					local showlayerbar = 0
					function getValue()
						return showlayerbar
					end
					function onButtonPress()
						if showlayerbar > 0 then
							showlayerbar = 0
						else
							showlayerbar = 1
						end
						window.parentcontrol.window.updateDisplay()
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_layers" insertbefore="h2">
				<anchored to="toolbar_anchor">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>layer_background</id>
					<icon>tool_layers_background_30</icon>
					<tooltip>Background Layer</tooltip>
				</button>
				<button>
					<id>layer_features</id>
					<icon>tool_layers_features_30</icon>
					<tooltip>Features Layer</tooltip>
				</button>
				<button>
					<id>layer_play</id>
					<icon>tool_layers_play_30</icon>
					<tooltip>Play Layer</tooltip>
				</button>
				<toggle />
				<invisible />
				<script>
					function onInit()
						super.onInit()
						setActive("layer_play")
					end
					function onButtonPress(sID)
						if (sID == "layer_background") then
							setActive("layer_background")
							window.parentcontrol.window.showLayer("background")
						elseif (sID == "layer_features") then
							setActive("layer_features")
							window.parentcontrol.window.showLayer("features")
						elseif (sID == "layer_play") then
							setActive("layer_play")
							window.parentcontrol.window.showLayer("play")
						end
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</toolbar_30>

			<!-- Clear saves button on toolbar -->
			<buttoncontrol name="toolbar_clear_saves">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />
				</anchored>
				<invisible/>
				<state icon="tool_clear_saves_30" />
				<frame name="toolbar_30" />
				<tooltip textres="tooltip_saves_clear_toolbar" />
				<script>
					function onButtonPress()
						Debug.console("pressed save clear button!"); 
						local image = window.parentcontrol.window.play_image;
						local listTokens = image.getTokens(); 
						for _,token in pairs(listTokens) do
							local nodeCT = CombatManager.getCTFromToken(token);
							if nodeCT then
								TokenManager2.setSaveOverlay(nodeCT,0); 	
							end
						end
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>

		</sheetdata>
	</windowclass>

	<windowclass name="imagepanelwindow_toolbar" merge="join">
<!--		<script>
			function onInit()
				update();
			end
			
			function getImage()
				return parentcontrol.window.image;
			end
			
			function update()
				local bHasTokens = getImage().hasTokens();

				if User.isHost() then
					toolbar_draw.setVisibility(true);
					h2.setVisible(true);
					
					local bShowGridToggle = getImage().hasGrid();
					toggle_grid.setVisible(bShowGridToggle);
					
					local bShowGridToolbar = false;
					if toggle_grid.getValue() > 0 then
						bShowGridToolbar = bShowGridToggle;
					end
					toolbar_grid.setVisibility(bShowGridToolbar);

					h1.setVisible(true);
				end

				toggle_select.setVisible(bHasTokens);
				h3.setVisible(bHasTokens);
				toggle_targetselect.setVisible(bHasTokens);
				toolbar_targeting.setVisibility(bHasTokens);
			end
		</script>-->	
		<script>
			function onInit()
				update()
			end
			function getImage()
				if User.isHost() then
					local activelayer = parentcontrol.window.layerEnabled()
					if activelayer == "play_image" then
						return parentcontrol.window.play_image
					elseif activelayer == "image" then
						return parentcontrol.window.image
					elseif activelayer == "features_image" then
						return parentcontrol.window.features_image					
					end			
				else
					return parentcontrol.window.play_image
				end
			end
			function update()
				super.update()
				if User.isHost() then
					h4.setVisible(true)
					toggle_layers.setVisible(true)
					local bShowLayersToggle = false
					if toggle_layers.getValue() &gt; 0 then
						bShowLayersToggle = true
					end
					local bShowLayersToolbar = false
					bShowLayersToolbar = bShowLayersToggle
					toolbar_layers.setVisibility(bShowLayersToolbar)
					toolbar_clear_saves.setVisible(true)
				end
			
				local activelayer = "play_image"
				local bHasTokens = false;
				
				if User.isHost() then
					bHasTokens = getImage().hasTokens();
					activelayer = parentcontrol.window.layerEnabled()
				else
					bHasTokens = parentcontrol.window.play_image.hasTokens();
				end
			
				toggle_select.setVisible(bHasTokens);
				
				if activelayer == "play_image" then
					h3.setVisible(bHasTokens);
					toggle_targetselect.setVisible(bHasTokens);
					toolbar_targeting.setVisibility(bHasTokens);
				else
					h3.setVisible(false);
					toggle_targetselect.setVisible(false);
					toolbar_targeting.setVisibility(false);
				end								
			end
		</script>		
		<sheetdata>
			<toolbar_30 name="toolbar_draw">
<!--				<script>
					function onValueChanged()
						local sTool = window.getImage().getCursorMode();
						if sTool == "unmask" then
							setActive("unmask");
						elseif sTool == "draw" then
							setActive("paint");
						elseif sTool == "erase" then
							setActive("erase");
						else
							setActive("");
						end
					end
					
					function onButtonPress(id)
						local image = window.getImage();
						
						if id == "paint" then
							if image.getCursorMode() ~= "draw" then
								image.setCursorMode("draw");
							else
								image.setCursorMode("");
							end
						elseif id == "erase" then
							if image.getCursorMode() ~= "erase" then
								image.setCursorMode("erase");
							else
								image.setCursorMode("");
							end
						elseif id == "unmask" then
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true);
								image.setCursorMode("unmask");
							else
								image.setCursorMode("");
							end
						end
					end
				</script>-->			
				<script>
					function onValueChanged()
						local activelayer = window.parentcontrol.window.layerEnabled()
						local sTool = ""
						if activelayer == "play_image" then
							sTool = window.getImage().getCursorMode()
						elseif activelayer == "image" then
							sTool = window.parentcontrol.window.image.getCursorMode()
						end
						if sTool == "unmask" and activelayer == "image" then
							setActive("unmask")
						elseif sTool == "draw" and activelayer == "play_image" then
							setActive("paint")
						elseif sTool == "erase" and activelayer == "play_image" then
							setActive("erase")
						else
							setActive("")
						end
					end
					function onButtonPress(id)
						local activelayer = window.parentcontrol.window.layerEnabled()
						local image = ""
						if activelayer == "play_image" then
							image = window.getImage()
						elseif activelayer == "image" then
							image = window.parentcontrol.window.image
						end
						if id == "paint" and activelayer == "play_image" then
							if image.getCursorMode() ~= "draw" then
								image.setCursorMode("draw")
							else
								image.setCursorMode("")
							end
						elseif id == "erase" and activelayer == "play_image" then
							if image.getCursorMode() ~= "erase" then
								image.setCursorMode("erase")
							else
								image.setCursorMode("")
							end
						elseif id == "unmask" and activelayer == "image" then
							if image.getCursorMode() ~= "unmask" then
								image.setMaskEnabled(true)
								image.setCursorMode("unmask")
							else
								image.setCursorMode("")
							end
						end
						onValueChanged()
					end
				</script>							
			</toolbar_30>
			
			<!-- New -->
			<genericcontrol name="h4" insertbefore="h2">
				<anchored to="toolbar_anchor" width="5" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible />
			</genericcontrol>
			<buttoncontrol name="toggle_layers" insertbefore="h2">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<state icon="tool_layers_30" color="60A0A0A0" />
				<state icon="tool_layers_30" />
				<frame name="toolbar_30" />
				<tooltip textres="image_tooltip_toolbargrid" />
				<invisible />
				<script>
					local showlayerbar = 0
					function getValue()
						return showlayerbar
					end
					function onButtonPress()
						if showlayerbar > 0 then
							showlayerbar = 0
						else
							showlayerbar = 1
						end
						window.parentcontrol.window.updateDisplay()
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</buttoncontrol>
			<toolbar_30 name="toolbar_layers" insertbefore="h2">
				<anchored to="toolbar_anchor">
					<top />
					<right anchor="left" relation="relative" />
				</anchored>
				<invisible/>
				<button>
					<id>layer_background</id>
					<icon>tool_layers_background_30</icon>
					<tooltip>Background Layer</tooltip>
				</button>
				<button>
					<id>layer_features</id>
					<icon>tool_layers_features_30</icon>
					<tooltip>Features Layer</tooltip>
				</button>
				<button>
					<id>layer_play</id>
					<icon>tool_layers_play_30</icon>
					<tooltip>Play Layer</tooltip>
				</button>
				<toggle />
				<invisible />
				<script>
					function onInit()
						super.onInit()
						setActive("layer_play")
					end
					function onButtonPress(sID)
						if (sID == "layer_background") then
							setActive("layer_background")
							window.parentcontrol.window.showLayer("background")
						elseif (sID == "layer_features") then
							setActive("layer_features")
							window.parentcontrol.window.showLayer("features")
						elseif (sID == "layer_play") then
							setActive("layer_play")
							window.parentcontrol.window.showLayer("play")
						end
						window.toolbar_draw.onValueChanged()
					end
				</script>
			</toolbar_30>			

			<!-- Clear saves button on toolbar -->
			<buttoncontrol name="toolbar_clear_saves">
				<anchored to="toolbar_anchor" width="34" height="34">
					<top />
					<left anchor="right" relation="relative" />					
				</anchored>				
				<invisible/>
				<state icon="tool_clear_saves_30" />
				<frame name="toolbar_30" />				
				<tooltip textres="tooltip_saves_clear_toolbar" />				
				<script>
					function onButtonPress()
						Debug.console("pressed save clear button!"); 
						local image = window.parentcontrol.window.play_image;
						local listTokens = image.getTokens(); 
						for _,token in pairs(listTokens) do
							local nodeCT = CombatManager.getCTFromToken(token);
							if nodeCT then
								TokenManager2.setSaveOverlay(nodeCT,0); 	
							end
						end
					end
					
					function updateDisplay()
					end
				</script>
			</buttoncontrol>

		</sheetdata>
	</windowclass>		
</root>
